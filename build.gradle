plugins {
    id 'java'
    id 'jacoco'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
    }
    mavenCentral()
}

def runeLiteVersion = findProperty('rlVersion') ?: 'latest.release'

dependencies {
    compileOnly "net.runelite:client:${runeLiteVersion}"

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'

    testImplementation "net.runelite:client:${runeLiteVersion}"
    testImplementation "net.runelite:jshell:${runeLiteVersion}"
}

group = 'com.ahdoozy.goaltrackerv2'
version = '1.0.4'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 11
}

tasks.test {
    useJUnitPlatform()

    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
    }
}

tasks.withType(Jar) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}